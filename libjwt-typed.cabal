cabal-version:       2.4
name:                libjwt-typed
version:             0.1
synopsis:            A typesafe and idiomatic Haskell wrapper over libjwt
description:         A typesafe and idiomatic Haskell wrapper over libjwt
homepage:            https://github.com/marcin-rzeznicki/libjwt-typed
bug-reports:         https://github.com/marcin-rzeznicki/libjwt-typed/issues
license:             MPL-2.0
license-file:        LICENSE
author:              Marcin Rzeźnicki
maintainer:          Marcin Rzeźnicki <marcin.rzeznicki@gmail.com>
copyright:           2020 Marcin Rzeźnicki
category:            Web
build-type:          Simple
extra-doc-files:     README.md
                     CHANGELOG.md
tested-with:         GHC == 8.8.3

source-repository head
  type:                git
  location:            https://github.com/marcin-rzeznicki/libjwt-typed.git

common common-options
  build-depends:       base >= 4.13.0.0 && < 4.15,
                       bytestring ^>= 0.10.10.0,
                       exceptions ==0.10.4,
                       either ^>= 5.0.1.1,
                       transformers ^>= 0.5.6.2,
                       uuid >= 1.3,
                       text >= 1.2.3.2 && < 1.2.5,
                       time >=1.9 && < 1.10,
                       monad-time ==0.3.*,
                       data-default >= 0.2 && < 1.0,
                       extra ^>= 1.7,
                       deepseq >= 1.4.4.0
  
  ghc-options:         -Wall
                       -Wcompat
                       -Widentities
                       -Wincomplete-uni-patterns
                       -Wincomplete-record-updates
                       -fdefer-typed-holes
                       -ddump-simpl-stats
                       -ddump-to-file
  if impl(ghc >= 8.0)
    ghc-options:       -Wredundant-constraints
  if impl(ghc >= 8.2)
    ghc-options:       -fhide-source-paths
  if impl(ghc >= 8.4)
    ghc-options:       -Wmissing-export-lists
                       -Wpartial-fields
  if impl(ghc >= 8.8)
    ghc-options:       -Wmissing-deriving-strategies

  default-language:    Haskell2010

library
  import:              common-options
  hs-source-dirs:      src
  build-depends:       unordered-containers ^>= 0.2.10.0,
                       utf8-string ^>= 1.0.1.1,
                       proxied ==0.3.*,
                       casing ^>= 0.1.4.1,
                       case-insensitive >= 1.2.0.0
  exposed-modules:     Web.Libjwt
                       Libjwt.Jwt
                       Libjwt.Exceptions
                       Libjwt.Header
                       Libjwt.RegisteredClaims
                       Libjwt.Payload
                       Libjwt.JwtValidation
                       Libjwt.ASCII
                       Libjwt.NumericDate
                       Libjwt.Flag
                       Libjwt.PrivateClaims
                       Libjwt.Classes
                       Libjwt.Encoding
                       Libjwt.Decoding
                       Libjwt.Keys
                       Libjwt.JsonByteString
                       Libjwt.FFI.Jwt
  other-modules:       Libjwt.FFI.Jsmn
                       Libjwt.FFI.Libjwt
  ghc-options:         -fprint-explicit-kinds
  cc-options:          -DJSMN_STATIC 
                       -DJSMN_PARENT_LINKS 
                       -DJSMN_STRICT 
                       -march=native 
                       -mtune=native 
                       -O2 
                       -fno-plt
  include-dirs:        src/cbits/jsmn
  c-sources:           src/cbits/HsJsonTokenizer.c
  extra-libraries:     jwt

test-suite libjwt-typed-test
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  other-modules:       Env
                       Generators
                       Properties
                       Interop.JWTHelpers
                       Interop.JWTEncoding
                       Interop.JWTDecoding
  build-depends:       libjwt-typed,
                       jwt >= 0.10.0,
                       containers,
                       aeson,
                       hspec ==2.7.*,
                       hspec-core ==2.7.*,
                       QuickCheck >= 2.13.2 && < 2.15,
                       quickcheck-instances >= 0.3.14
  ghc-options:         -threaded
                       -rtsopts
                       -ddump-simpl-stats
                       -ddump-to-file
                       "-with-rtsopts=-N -A64m -n4m -ki2k"

benchmark libjwt-typed-benchmark
  import:              common-options
  type:                exitcode-stdio-1.0
  hs-source-dirs:      bench
  main-is:             Benchmarks.hs
  other-modules:       Env
                       Algorithms
  build-depends:       libjwt-typed,
                       criterion,
                       QuickCheck >= 2.13.2 && < 2.15,
  ghc-options:         -O2
                       -threaded
                       -rtsopts
                       "-with-rtsopts=-N -s -ki2k -A256m -n8m"
